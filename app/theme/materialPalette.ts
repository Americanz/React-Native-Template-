const MD3LightColors = {
  primary: "rgb(120, 69, 172)",
  onPrimary: "rgb(255, 255, 255)",
  primaryContainer: "rgb(240, 219, 255)",
  onPrimaryContainer: "rgb(44, 0, 81)",
  secondary: "rgb(102, 90, 111)",
  onSecondary: "rgb(255, 255, 255)",
  secondaryContainer: "rgb(237, 221, 246)",
  onSecondaryContainer: "rgb(33, 24, 42)",
  tertiary: "rgb(128, 81, 88)",
  onTertiary: "rgb(255, 255, 255)",
  tertiaryContainer: "rgb(255, 217, 221)",
  onTertiaryContainer: "rgb(50, 16, 23)",
  error: "rgb(186, 26, 26)",
  onError: "rgb(255, 255, 255)",
  errorContainer: "rgb(255, 218, 214)",
  onErrorContainer: "rgb(65, 0, 2)",
  background: "rgb(255, 251, 255)",
  onBackground: "rgb(29, 27, 30)",
  surface: "rgb(255, 251, 255)",
  onSurface: "rgb(29, 27, 30)",
  surfaceVariant: "rgb(233, 223, 235)",
  onSurfaceVariant: "rgb(74, 69, 78)",
  outline: "rgb(124, 117, 126)",
  outlineVariant: "rgb(204, 196, 206)",
  shadow: "rgb(0, 0, 0)",
  scrim: "rgb(0, 0, 0)",
  inverseSurface: "rgb(50, 47, 51)",
  inverseOnSurface: "rgb(245, 239, 244)",
  inversePrimary: "rgb(220, 184, 255)",
  surfaceDisabled: "rgba(29, 27, 30, 0.12)",
  onSurfaceDisabled: "rgba(29, 27, 30, 0.38)",
  backdrop: "rgba(51, 47, 55, 0.4)",
};

const MD3DarkColors = {
  primary: "rgb(220, 184, 255)",
  onPrimary: "rgb(71, 12, 122)",
  primaryContainer: "rgb(95, 43, 146)",
  onPrimaryContainer: "rgb(240, 219, 255)",
  secondary: "rgb(208, 193, 218)",
  onSecondary: "rgb(54, 44, 63)",
  secondaryContainer: "rgb(77, 67, 87)",
  onSecondaryContainer: "rgb(237, 221, 246)",
  tertiary: "rgb(243, 183, 190)",
  onTertiary: "rgb(75, 37, 43)",
  tertiaryContainer: "rgb(101, 58, 65)",
  onTertiaryContainer: "rgb(255, 217, 221)",
  error: "rgb(255, 180, 171)",
  onError: "rgb(105, 0, 5)",
  errorContainer: "rgb(147, 0, 10)",
  onErrorContainer: "rgb(255, 218, 214)",
  background: "rgb(29, 27, 30)",
  onBackground: "rgb(231, 225, 229)",
  surface: "rgb(29, 27, 30)",
  onSurface: "rgb(231, 225, 229)",
  surfaceVariant: "rgb(74, 69, 78)",
  onSurfaceVariant: "rgb(204, 196, 206)",
  outline: "rgb(150, 142, 152)",
  outlineVariant: "rgb(74, 69, 78)",
  shadow: "rgb(0, 0, 0)",
  scrim: "rgb(0, 0, 0)",
  inverseSurface: "rgb(231, 225, 229)",
  inverseOnSurface: "rgb(50, 47, 51)",
  inversePrimary: "rgb(120, 69, 172)",
  surfaceDisabled: "rgba(231, 225, 229, 0.12)",
  onSurfaceDisabled: "rgba(231, 225, 229, 0.38)",
  backdrop: "rgba(51, 47, 55, 0.4)",
};

const createMaterialPalette = (isDark: boolean) => {
  const md3Colors = isDark ? MD3DarkColors : MD3LightColors;

  return {
    neutral100: md3Colors.background,
    neutral200: md3Colors.surfaceVariant,
    neutral300: md3Colors.surfaceVariant,
    neutral400: md3Colors.outline,
    neutral500: md3Colors.onSurfaceVariant,
    neutral600: md3Colors.onSurface,
    neutral700: md3Colors.onSurface,
    neutral800: md3Colors.onBackground,
    neutral900: md3Colors.onBackground,

    primary100: md3Colors.primaryContainer,
    primary200: md3Colors.primary,
    primary300: md3Colors.primary,
    primary400: md3Colors.primary,
    primary500: md3Colors.primary,
    primary600: md3Colors.primary,

    secondary100: md3Colors.secondaryContainer,
    secondary200: md3Colors.secondary,
    secondary300: md3Colors.secondary,
    secondary400: md3Colors.secondary,
    secondary500: md3Colors.secondary,

    accent100: md3Colors.tertiaryContainer,
    accent200: md3Colors.tertiary,
    accent300: md3Colors.tertiary,
    accent400: md3Colors.tertiary,
    accent500: md3Colors.tertiary,

    angry100: md3Colors.errorContainer,
    angry500: md3Colors.error,

    success50: md3Colors.primaryContainer,
    success100: md3Colors.primary,
    success200: md3Colors.primary,
    success300: md3Colors.primary,
    success400: md3Colors.primary,
    success500: md3Colors.primary,
    success600: md3Colors.primary,
    success700: md3Colors.primary,
    success800: md3Colors.primary,
    success900: md3Colors.primary,

    overlay20: `rgba(29, 27, 30, 0.2)`,
    overlay50: `rgba(29, 27, 30, 0.5)`,


    ...md3Colors,
  };
};

export type MaterialPalette = ReturnType<typeof createMaterialPalette>;

export { createMaterialPalette };
